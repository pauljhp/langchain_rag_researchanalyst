from __future__ import annotations
from typing import (Union, 
  Optional,
  List,
  Dict,
  Sequence,
  Iterable,
  Callable
  )
from collections import Counter
import json
from urllib.parse import urlparse, urljoin
from pathlib import Path
import logging
import pandas as pd
import numpy as np
from .._abstract import AbstractAPI


LOGPATH = Path('./FinancialModelingPrep/.log/')
LOGFILE = LOGPATH.joinpath('log.log')

if not LOGFILE.exists():
    LOGFILE.touch(exist_ok=False)

logging.basicConfig(filename=LOGFILE, 
    # encoding='utf-8', 
    level=logging.DEBUG)

DEFAULT_CONFIG = Path("./FinancialModelingPrep/.config/config.json")

if not DEFAULT_CONFIG.exists():
    DEFAULT_CONFIG.parent.mkdir(parents=True, exist_ok=True)
    DEFAULT_CONFIG.write_text(r"""\"\{"apikey": "{a}"\}\"""".format(a=input("the config file wasn't found - enter your apikey: ")))


BBG_EXCH_LOOKUP = {'AQSE': 'PZ',
  'Abidjan': 'IA',
  'Albania': 'AL',
  'Algeria': 'AG',
  'Andorra': 'AD',
  'Angola': 'AX',
  'Anguilla': 'AI',
  'Aquis Exchange': 'QE',
  'Aquis Exchg': 'QX',
  'Argentina': 'AR',
  'AsstMtch MTF': 'A0',
  'Australia': 'AU',
  'Austria': 'AV',
  'Azerbaijan': 'AZ',
  'BATS Europe': 'EB',
  'BMTF - ETF': 'B2',
  'BRVM Regional': 'BC',
  'Bahamas': 'BM',
  'Bangladesh': 'BD',
  'Barbados': 'BA',
  'Belarus': 'RB',
  'Belgium': 'BB',
  'Belize': 'ZB',
  'Bermuda': 'BH',
  'Blockmatch': 'B3',
  'Bolivia': 'VB',
  'Botswana': 'BG',
  'Brazil': 'BZ',
  'Brit Virgin Is': 'VI',
  'Brunei': 'BX',
  'Bulgaria': 'BU',
  'Burgundy': 'BY',
  'Cambodia': 'KH',
  'Cameroon': 'DE',
  'Canada': 'CN',
  'Cape Verde': 'VR',
  'Cayman Islands': 'KY',
  'Cboe APA EU': 'X2',
  'Cboe BXE EU': 'E2',
  'Cboe CXE EU': 'I2',
  'Central Afr Rp': 'ZC',
  'Chi-East': 'HE',
  'Chi-X Europe': 'IX',
  'Chile': 'CI',
  'China': 'CH',
  'Colombia': 'CB',
  'Cook Islands': 'CU',
  'Costa Rica': 'CR',
  'Croatia': 'CZ',
  'Cyprus': 'CY',
  'Czech Republic': 'CP',
  'Damascus SecEx': 'SY',
  'Denmark': 'DC',
  'Eastern Carrib': 'EK',
  'Ecuador': 'ED',
  'Egypt(EGX)': 'EY',
  'El Salvador': 'EL',
  'Equiduct': 'BQ',
  'Estonia': 'ET',
  'Eswatini': 'SD',
  'Euro Comp': 'EU',
  'EuroTLX': 'TE',
  'Fed of Bos/Her': 'BT',
  'Fiji': 'FS',
  'Finland': 'FH',
  'France': 'FP',
  'GXG Markets': 'G4',
  'Gabon': 'ZG',
  'Gambia': 'GX',
  'Georgia': 'GG',
  'German NM': 'NM',
  'Germany': 'GR',
  'Gettex': 'GZ',
  'Ghana': 'GN',
  'Gibraltar': 'TL',
  'Greece': 'GA',
  'Guatemala': 'GL',
  'Guernsey': 'GU',
  'HI-MTF': 'HM',
  'Honduras': 'HO',
  'Hong Kong': 'HK',
  'Hungary': 'HB',
  'ITG Posit': 'PO',
  'Iceland': 'IR',
  'India': 'IN',
  'Indonesia': 'IJ',
  'Iran': 'IE',
  'Iraq Stock Ex': 'IQ',
  'Ireland': 'ID',
  'Isle of Man': 'IO',
  'Israel': 'IT',
  'Italy': 'IM',
  'Jamaica': 'JA',
  'Japan': 'JP',
  'Jersey': 'JY',
  'Jordan': 'JR',
  'KSE': 'KS',
  'Kabul Intl': 'AK',
  'Kazakhstan': 'KZ',
  'Kenya': 'KN',
  'Khartoum Stock Exchange': 'S3',
  'KoreaFrBMkt': 'KF',
  'Kosovo': 'KO',
  'Kuwait': 'KK',
  'Kyrgyzstan': 'KB',
  'Lang & Schwarz Exchange - LSX': 'LA',
  'Lang & Schwarz Exchange - Systematic Internalizer': 'LU',
  'Laos SE': 'LS',
  'Latinex': 'PP',
  'Latvia': 'LR',
  'Lebanon': 'LB',
  'Libn Arb Jmhra': 'LY',
  'Liechtenstein': 'LE',
  'Liquidnet': 'L3',
  'Liquidnet IR - CB3C': 'L1',
  'Lithuania': 'LH',
  'London Intl': 'LI',
  'Luxembourg': 'LX',
  'MESDAQ': 'MQ',
  'MICEX': 'RM',
  'MS MTF': 'M0',
  'Macau': 'MA',
  'Macedonia': 'MS',
  'Malawi SE': 'MW',
  'Malaysia': 'MK',
  'Maldives': 'MX',
  'Manama': 'BI',
  'Marshall Islds': 'MI',
  'Mexico': 'MM',
  'Moldova': 'MB',
  'Monaco': 'MN',
  'Mongolia': 'MO',
  'Montenegro': 'ME',
  'Morocco': 'MC',
  'Mozambique': 'MZ',
  'NASDAQ Europe': 'ES',
  'NASDAQ OMX Arm': 'AY',
  'NDQ Deutschlnd': 'ND',
  'NYSE ARCA Eu': 'NR',
  'NYSE EU London': 'LD',
  'Namibia': 'NW',
  'Nasdaq Dubai': 'DU',
  'Nepal': 'NK',
  'Neth Antilles': 'NT',
  'Netherlands': 'NA',
  'Nevis': 'NX',
  'New Zealand': 'NZ',
  'Nicaragua': 'NC',
  'Nigeria': 'NL',
  'Norway': 'NO',
  'Nth SSE-SEHK': 'C1',
  'Nth SZ-SEHK': 'C2',
  'OFEX London': 'OF',
  'OTC Composite': 'EO',
  'Oman': 'OM',
  'PLUS Europe': 'PG',
  'PNGX Market Limited': 'PB',
  'Pakistan': 'PA',
  'Palestine': 'PS',
  'Paraguay': 'PN',
  'Peru': 'PE',
  'Philippines': 'PM',
  'Poland': 'PW',
  'Portugal': 'PL',
  'Qatar': 'QD',
  'Quotrix Exchg': 'QT',
  'Romania': 'RO',
  'Rpblika Srpska': 'BK',
  'Russia': 'RU',
  'Rwanda': 'RW',
  'SEM': 'MP',
  'SIGMA-X EU MTF': 'S4',
  'SIX Swiss Exch': 'VX',
  'Saudi Arabia': 'AB',
  'Senegal': 'ZS',
  'Serbia': 'SG',
  'Seychelles': 'SZ',
  'SharesPost': 'SH',
  'Sierra Leone': 'SU',
  'Sigma X MTF': 'S1',
  'Singapore': 'SP',
  'Slovakia': 'SK',
  'Slovenia': 'SV',
  'South Africa': 'SJ',
  'Spain': 'SM',
  'Sri Lanka': 'SL',
  'Sth SSE-SEHK': 'H1',
  'Sth SZ-SEHK': 'H2',
  'Sweden': 'SS',
  'Switzerland': 'SW',
  'TOM MTF': 'MT',
  'Taiwan': 'TT',
  'Tajikistan': 'TD',
  'Tanzania': 'TZ',
  'Thailand': 'TB',
  'TradeWeb MTF': 'T2',
  'Tradegate': 'TH',
  'Trinidad': 'TP',
  'Tunisia': 'TU',
  'Turkey': 'TI',
  'Turkmenistan': 'TM',
  'Turks & Caico': 'TC',
  'Turquoise Eu': 'T1',
  'Turquoise Mkt': 'TQ',
  'UAE': 'UH',
  'UBS MTF': 'S2',
  'Uganda': 'UG',
  'Ukraine': 'UZ',
  'United Kingdom': 'LN',
  'United States': 'US',
  'Uruguay': 'UY',
  'Uzbekistan': 'ZU',
  'Valetta': 'MV',
  'Venezuela': 'VC',
  'Vietnam': 'VN',
  'Xetra Intl Mkt': 'GK',
  'Yemen': 'YS',
  'Zambia': 'ZL',
  'Zimbabwe': 'ZH'}

FMP_EXCH_LOOKUP = {'London Stock Exchange': 'United Kingdom', 
  'New York Stock Exchange': 'United States', 
  'Tokyo': 'Japan', 
  'HKSE': 'HK', 
  'Other OTC': None, 
  'National Stock Exchange of India': 'India', 
  'NASDAQ Capital Market': 'United States', 
  'Shanghai': 'China', 
  'New York Stock Exchange Arca': 'United States', 
  'NASDAQ Global Select': 'United States', 
  'Shenzhen': 'China', 
  'XETRA': "Germany", 
  'NASDAQ Global Market': 'United States', 
  'Toronto Stock Exchange': 'Canada', 
  'Nasdaq Capital Market': 'United States', 
  'Taiwan': 'Taiwan', 
  'Paris': 'France', 
  'KSE': 'KSE', 
  'Stockholm Stock Exchange': 'Sweden', 
  'Jakarta Stock Exchange': 'Indonesia', 
  'BATS': "United States", 
  'SÃ£o Paulo': 'Brazil', 
  'Frankfurt': "Germany", 
  'Warsaw Stock Exchange': 'Poland', 
  'Swiss Exchange': 'Switzerland', 
  'Milan': 'Italy', 
  'Saudi': 'Saudi Arabia', 
  'American Stock Exchange': 'United States', 
  'Johannesburg': "South Africa", 
  'Oslo Stock Exchange': "Norway", 
  'Amsterdam': "Netherlands", 
  'Thailand': "Thailand", 
  'Helsinki': "Finland", 
  'SES': "Singapore", 
  'Copenhagen': "Denmark", 
  'KOSDAQ': "Korea", 
  'Tel Aviv': "Isreal", 
  'Brussels': "Belgium", 
  'Taipei Exchange': "Taiwan", 
  'Nasdaq': "United States", 
  'Madrid Stock Exchange': "Spain", 
  'Istanbul Stock Exchange': "Turkey", 
  'Mexico': "Mexico", 
  'NZSE': "New Zealand", 
  'TSXV': "Canada", 
  'Lisbon': "Portugal", 
  'IOB': "United Kingdom", 
  'Qatar': "Qatar", 
  'Irish': "Ireland", 
  'Santiago': "Chile", 
  'Vienna': "Austria", 
  'Canadian Sec': "Canada", 
  'Athens': "Greece", 
  'Iceland': "Iceland", 
  'Prague': "Czech Republic", 
  'Dubai': "UAE", 
  'Dusseldorf': "Germany", 
  'Munich': "Germany", 
  'Stuttgart': "Germany", 
  'Hamburg': "Germany", 
  'Budapest': "Hungary", 
  'Berlin': "Germany", 
  'Buenos Aires': "Argentina", 
  'Nasdaq Global Select': 'United States', 
  'LSE': "United Kingdom", 
  'FTSE Index': "United Kingdom", 
  'Stockholm': "Sweden", 
  'NYSE American': 'United States', 
  'NasdaqGS': 'United States', 
  'Tallinn': "Estonia", 
  'Fukuoka': "Japan", 
  'NEO': "Canada", 
  'CCC': None}


class TickerLookup(AbstractAPI):
    """class for converting tickers between BBG and FMP
    Note:
    - Convering FMP to BBG relatively easy as FMP uses exchange codes, while 
        BBG tickers usually is country code. 
    - If supplied BBG ticker is only country code, a lookup is required and 
        there may be multiple results returned
    """
    def __init__(self, 
        mode='statements',
        config=DEFAULT_CONFIG,
        **kwargs):
        super(TickerLookup, self).__init__(
            config=config,
            **kwargs)
        endpoint = urljoin(self._endpoint, "stock/list/")
        all_tickers_ls = self._get_data(url=endpoint)
        self.all_tickers = pd.concat(
            [pd.Series(s).to_frame().T 
            for s in all_tickers_ls])
        self.all_tickers.loc[:, "ticker_wo_exch_code"] = \
            self.all_tickers.symbol.apply(lambda x: str(x).split(".")[0])

    def _fmp2bbgticker(self, fmpticker: str) -> Union[None, str]:
        """converts FMP tickers to BBG tickers"""
        assert fmpticker.lower() in self.all_tickers.symbol.str.lower().values, f"Ticker {fmpticker} is not available!"
        ticker_data = self.all_tickers.query("`symbol`==@fmpticker").iloc[0]
        country = FMP_EXCH_LOOKUP.get(ticker_data.exchange)
        bbg_exch_code = BBG_EXCH_LOOKUP.get(country)
        bbg_ticker = f"{ticker_data.ticker_wo_exch_code} {bbg_exch_code} Equity"
        return bbg_ticker

    @classmethod
    def fmp2bbgticker(cls, fmpticker: str) -> Union[None, str]:
        return cls()._fmp2bbgticker(fmpticker)

    def _bbg2fmpticker(self, bbgticker: str) -> Union[None, str]:
        # TODO - add reverse lookup from BBG to FMP - more difficult, requires lookup
        raise NotImplementedError
    
    @classmethod
    def bbg2fmpticker(cls, bbgticker: str) -> Union[None, str]:
        return cls()._bbg2fmpticker(bbgticker)